% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1_aggregate.R
\name{aggregate_sequences}
\alias{aggregate_sequences}
\title{Aggregation functions}
\usage{
aggregate_sequences(unaggregated_data, format = "\%m-\%d-\%Y", index_date = FALSE,
  calendar = FALSE, unit = "week", n_units = 1, anchor_table = NA,
  anchor_vector = NA, base_date = NA, occurence = min, multiset = FALSE,
  include_date = FALSE, summary_stats = TRUE, output_directory = "~")
}
\arguments{
\item{unaggregated_data}{A dataframe that has exactly 3 columns
in this order - id, date, event}

\item{format}{String specifying format of the date}

\item{index_date}{Logical indicator which indicates if the data is in a numerical format which represents the number of days since an index event, i.e. 0 represents first date, 1 respresents 1 day since index date (0), 2 represents 2 days since index date (0), etc.}

\item{calendar}{Boolean indicating whether or not to use calendar aggregation.
Defaults to false}

\item{unit}{String specifying unit of aggregation. Takes one of c("day", "week",
"month", "6 months", "year")}

\item{n_units}{Integer specifying number of units.}

\item{anchor_table}{Beta}

\item{anchor_vector}{Beta}

\item{base_date}{Beta}

\item{occurence}{Beta}

\item{multiset}{Beta; Logical indicator which controls the exclusion of multiple events within the same event set.}

\item{include_date}{Logical indicator which controls the inclusion of the date variable in the returning data. If creating reports using the
-generate_reports- function of approxmapR, then the dates will be included in the alignment_with_date output file if this argument is
equal to TRUE - default value is FALSE.}

\item{summary_stats}{Logical controlling printing of summary
statistics regarding aggregation. Defaults to TRUE}

\item{output_directory}{The path to where the exports should be placed.}
}
\value{
Aggregated dataframe that has sequence id, itemset (period) and event (item)
}
\description{
A dataframe having id, date and event column
can be aggregated using this function
}
\examples{
library(approxmapR)

data("mvad")

# This will aggregate the data using a 6-month frame, i.e. all events which occurred
#   in 6-months will be grouped into an event set
mvad \%>\% aggregate_sequences(format = "\%Y-\%m-\%d", unit = "month", n_units = 6)
}
